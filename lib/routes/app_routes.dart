import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:just_audio_background/just_audio_background.dart';

import '../AudioPlayer/player_page.dart';
import '../AudioPlayer/splashpage.dart';

enum AppRoutes {
  root,
  login,
  home,
  expenseScreen,
  fuelCategories,
  addFuelExpense,
  fuelSummary,
  rentedScreen,
  rentSummary,
  accommodationSummary,
  travelSummaryScreen,
  travelEntryScreen,
  addAccommodation,
  foodEntryScreen,
  foodSummaryScreen,
  repairsAndMaintenanceEntryScreen,
  repairsAndMaintenanceSummaryScreen,
  generalEntryScreen,
  generalSummaryScreen,
  wagesEntryScreen,
  wagesSummaryScreen,
  purchaseEntryScreen,
  purchaseSummaryScreen,
  utilizationEntryScreen,
  utilizationSummaryScreen,
  addOthersExpenseScreen,
  addOthersSummaryScreen,
  transportExpenseScreen,
  transportSummaryScreen,
  createdFundRequest,
  fundRequest,
  summaryScreen,
  addSalesTeam,
  salesTeamOne,
  commercialPage,
  technicalPage,
  supportMessageScreen,
  leaveApproval,
  leaveApplyScreen,
  escalationOne,
  escalationTwo,
  feedbacks,
  feedbackRespond,
  attendanceApproval,
  attendanceHistoryScreenOne,
  attendanceHistoryScreenTwo,
  nonProjectListScreen,
  profileScreen,
  managerHierarchyBinding,
  greenThank,
  griVance,
  griVanceCreateScreen,
  leaveStatusScreen,
  addEvents,
  events,
  reminder,
  addReminder,
  leaveApply,
  bottomNavBar,
  paySlip,
  financeHome,
  salaryScreen,
  earningScreen,
  hRMSHome,
  getCommercialFromTechnical,
  technicalScreen,
  technicalUpdate,
  assignProjectList,
  assignMechanicalTeam,
  employeeDetails,
  projectManagerAssignScreen,
  employeeProjectDetails,
  employeeProjectList,
  projectReview,
  maintenancePage,
  maintenanceSummary,
  repairsPurchase,
  wagesEmployeeList,
  wageEmployeeDetails,
  feedbackEntry,
  feedbackSummary,
  onDutyEntry,
  onDutySummary,
  ideaLogySummary,
  ideaLogyEntry,
  getIdeaLogyEmployee,
  getOnDutyEmployee,
  getGreenThanks,
  onDutyScreen,
  escalationThree,
  escalationPending,
  onDutyApproval,
  ideaAgree,
  onDutyPending,
  onDutyReject,
  taskView,
  officeAdd,
  officeSummary,
  changePassword,
  getSupport,
  supportScreen,
  forgotPassword,
  projectListView,
  graphScreen,
}

extension AppRouteExtension on AppRoutes {
  static const appRoutes = {
    AppRoutes.root: "/",
    AppRoutes.login: "/login",
    AppRoutes.home: "/HomeScreen",
    AppRoutes.expenseScreen: "/ExpenseScreen",
    AppRoutes.forgotPassword: "/forgotPassword",
    AppRoutes.fuelCategories: "/FuelCategories",
    AppRoutes.addFuelExpense: "/AddFuelExpense",
    AppRoutes.fuelSummary: "/FuelSummary",
    AppRoutes.rentedScreen: "/RentedScreen",
    AppRoutes.rentSummary: "/RentSummary",
    AppRoutes.accommodationSummary: "/AccommodationSummary",
    AppRoutes.addAccommodation: "/AddAccommodation",
    AppRoutes.travelSummaryScreen: "/TravelSummaryScreen",
    AppRoutes.travelEntryScreen: "/TravelEntryScreen",
    AppRoutes.foodSummaryScreen: "/FoodSummaryScreen",
    AppRoutes.foodEntryScreen: "/FoodEntryScreen",
    AppRoutes.repairsAndMaintenanceEntryScreen:
        "/RepairsAndMaintenanceEntryScreen",
    AppRoutes.repairsAndMaintenanceSummaryScreen:
        "/RepairsAndMaintenanceSummaryScreen",
    AppRoutes.generalSummaryScreen: "/GeneralSummaryScreen",
    AppRoutes.generalEntryScreen: "/GeneralEntryScreen",
    AppRoutes.wagesSummaryScreen: "/WagesSummaryScreen",
    AppRoutes.wagesEntryScreen: "/WagesEntryScreen",
    AppRoutes.purchaseSummaryScreen: "/PurchaseSummaryScreen",
    AppRoutes.purchaseEntryScreen: "/PurchaseEntryScreen",
    AppRoutes.utilizationSummaryScreen: "/UtilizationSummaryScreen",
    AppRoutes.utilizationEntryScreen: "/UtilizationEntryScreen",
    AppRoutes.addOthersExpenseScreen: "/AddOthersExpenseScreen",
    AppRoutes.addOthersSummaryScreen: "/AddOthersSummaryScreen",
    AppRoutes.transportExpenseScreen: "/TransportExpenseExpenseScreen",
    AppRoutes.transportSummaryScreen: "/TransportSummarySummaryScreen",
    AppRoutes.createdFundRequest: "/CreateFundRequest",
    AppRoutes.fundRequest: "/FundRequest",
    AppRoutes.summaryScreen: "/SummaryScreen",
    AppRoutes.salesTeamOne: "/SalesTeamOne",
    AppRoutes.addSalesTeam: "/AddSalesTeam",
    AppRoutes.commercialPage: "/CommercialPage",
    AppRoutes.technicalPage: "/TechnicalPage",
    AppRoutes.supportMessageScreen: "/SupportMessageScreen",
    AppRoutes.leaveApproval: "/LeaveApproval",
    AppRoutes.leaveApplyScreen: "/LeaveApplyScreen",
    AppRoutes.escalationTwo: "/EscalationTwo",
    AppRoutes.escalationOne: "/EscalationOne",
    AppRoutes.feedbacks: "/Feedbacks",
    AppRoutes.feedbackRespond: "/FeedbackRespond",
    AppRoutes.attendanceApproval: "/AttendanceApproval",
    AppRoutes.attendanceHistoryScreenOne: "/attendanceHistoryScreenOne",
    AppRoutes.attendanceHistoryScreenTwo: "/attendanceHistoryScreenTwo",
    AppRoutes.nonProjectListScreen: "/NonProjectListScreen",
    AppRoutes.profileScreen: "/ProfileScreen",
    AppRoutes.managerHierarchyBinding: "/ManagerHierarchy",
    AppRoutes.greenThank: "/GreenThank",
    AppRoutes.griVance: "/GriVance",
    AppRoutes.griVanceCreateScreen: "/GriVanceCreateScreen",
    AppRoutes.leaveStatusScreen: "/LeaveStatusScreen",
    AppRoutes.addEvents: "/AddEvents",
    AppRoutes.events: "/Events",
    AppRoutes.reminder: "/Reminder",
    AppRoutes.addReminder: "/AddReminder",
    AppRoutes.leaveApply: "/LeaveApply",
    AppRoutes.bottomNavBar: "/BottomNavBar",
    AppRoutes.paySlip: "/PaySlip",
    AppRoutes.financeHome: "/FinanceHome",
    AppRoutes.salaryScreen: "/SalaryScreen",
    AppRoutes.earningScreen: "/EarningScreen",
    AppRoutes.hRMSHome: "/HRMSHome",
    AppRoutes.getCommercialFromTechnical: "/GetCommercialFromTechnical",
    AppRoutes.technicalScreen: "/TechnicalPage",
    AppRoutes.technicalUpdate: "/TechnicalUpdate",
    AppRoutes.assignProjectList: "/AssignProjectList",
    AppRoutes.assignMechanicalTeam: "/AssignMechanicalTeam",
    AppRoutes.employeeDetails: "/EmployeeDetails",
    AppRoutes.projectManagerAssignScreen: "/ProjectManagerAssign",
    AppRoutes.employeeProjectDetails: "/EmployeeProjectDetails",
    AppRoutes.employeeProjectList: "/EmployeeProjectList",
    AppRoutes.projectReview: "/ProjectDetailsReview",
    AppRoutes.maintenancePage:"/MaintenancePage",
    AppRoutes.maintenanceSummary:"/MaintenanceSummary",
    AppRoutes.repairsPurchase:"/RepairPurchaseEntryScreen",
    AppRoutes.wagesEmployeeList: "/WagesEmployeeList",
    AppRoutes.wageEmployeeDetails: "/WageEmployeeDetails",
    AppRoutes.ideaLogyEntry: "/IdeaLogyEntry",
    AppRoutes.ideaLogySummary: "/IdeaLogySummary",
    AppRoutes.onDutyEntry: "/OnDutyEntryScreen",
    AppRoutes.onDutySummary: "/OnDutySummaryScreen",
    AppRoutes.getIdeaLogyEmployee: "/GetIdeaLogyEmployee",
    AppRoutes.getOnDutyEmployee: "/GetOnDutyEmployee",
    AppRoutes.getGreenThanks: "/GetGreenThanks",
    AppRoutes.onDutyScreen: "/OnDutyScreen",
    AppRoutes.escalationThree: "/EscalationResponseScreen",
    AppRoutes.escalationPending: "/EscalationPendingScreen",
    AppRoutes.onDutyPending: "/OnDutyPending",
    AppRoutes.ideaAgree: "/IdeaAgree",
    AppRoutes.onDutyApproval: "/OnDutyApproval",
    AppRoutes.onDutyReject: "/OnDutyReject",
    AppRoutes.taskView: "/TaskView",
    AppRoutes.officeAdd: "/OfficeAdd",
    AppRoutes.officeSummary: "/OfficeSummary",
    AppRoutes.changePassword: "/ChangePassword",
    AppRoutes.getSupport: "/GetSupport",
    AppRoutes.supportScreen: "/SupportScreen",
    AppRoutes.projectListView: "/ProjectListView",
    AppRoutes.graphScreen: "/graphScreen",
  };

  String get toName => appRoutes[this]!;
}

enum ApiRoutes {
  login,
}

extension ApiRouteExtension on ApiRoutes {
  static const apiRoutes = {
    ApiRoutes.login: "",
  };

  String get toName => apiRoutes[this]!;
}
class AppRouter {
  static const String playerRoute = '/player';
  static const String homeRoute = '/MyHomePage';
  static Route<dynamic> playerRouteOne(RouteSettings settings) {
    switch (settings.name) {
      case playerRoute:
        return MaterialPageRoute<dynamic>(
          builder: (_) => PlayerPage(
            mediaItem: settings.arguments as MediaItem,
          ),
        );
      default:
        return MaterialPageRoute<dynamic>(
          builder: (_) => const SplashPage(),
        );
    }
  }
}